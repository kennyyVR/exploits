local TweenService = game:GetService("TweenService")

local SelectedTheme = {
    ElementBackground = Color3.fromRGB(30, 30, 30),
    ElementBackgroundHover = Color3.fromRGB(40, 40, 40),
    ToggleEnabled = Color3.fromRGB(0, 200, 0),
    ToggleDisabled = Color3.fromRGB(200, 0, 0),
    ToggleEnabledStroke = Color3.fromRGB(0, 150, 0),
    ToggleDisabledStroke = Color3.fromRGB(150, 0, 0)
}

local function createToggle(Settings)
    local Toggle = {}
    
    Toggle.Name = Settings.Name or "Toggle"
    Toggle.Description = Settings.Description or ""
    Toggle.CurrentValue = Settings.DefaultValue or false
    Toggle.Callback = Settings.Callback or function() end

    local ToggleFrame = Instance.new("Frame")
    local ToggleIndicator = Instance.new("Frame")

    local function updateToggleVisual()
        if Toggle.CurrentValue then
            ToggleIndicator.BackgroundColor3 = SelectedTheme.ToggleEnabled
            ToggleIndicator.UIStroke.Color = SelectedTheme.ToggleEnabledStroke
        else
            ToggleIndicator.BackgroundColor3 = SelectedTheme.ToggleDisabled
            ToggleIndicator.UIStroke.Color = SelectedTheme.ToggleDisabledStroke
        end
    end

    local function toggle()
        Toggle.CurrentValue = not Toggle.CurrentValue
        updateToggleVisual()
        Toggle.Callback(Toggle.CurrentValue)
    end

    ToggleFrame.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            toggle()
        end
    end)

    updateToggleVisual()
    return Toggle
end

local RayfieldLibrary = {}

local function createToggleSettingsUI(ToggleSettings)
    Topbar.Title.Text = ToggleSettings.Name
    Toggle.Settings.Text = ToggleSettings.Description
    Toggle.Settings.MouseButton1Click:Connect(function()
        ToggleSettings.CurrentValue = not ToggleSettings.CurrentValue
        ToggleSettings:Set(ToggleSettings.CurrentValue)
    end)

    function ToggleSettings:Set(NewToggleValue)
        if NewToggleValue then
            ToggleSettings.CurrentValue = true
            TweenService:Create(Toggle, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {BackgroundColor3 = SelectedTheme.ElementBackgroundHover}):Play()
            TweenService:Create(Toggle.UIStroke, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {Transparency = 1}):Play()
            TweenService:Create(Toggle.Switch.Indicator, TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {Position = UDim2.new(1, -20, 0.5, 0)}):Play()
            TweenService:Create(Toggle.Switch.Indicator, TweenInfo.new(0.4, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {Size = UDim2.new(0,12,0,12)}):Play()
            TweenService:Create(Toggle.Switch.Indicator.UIStroke, TweenInfo.new(0.55, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {Color = SelectedTheme.ToggleEnabledStroke}):Play()
            TweenService:Create(Toggle.Switch.Indicator, TweenInfo.new(0.8, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {BackgroundColor3 = SelectedTheme.ToggleEnabled}):Play()
            TweenService:Create(Toggle.Switch.UIStroke, TweenInfo.new(0.55, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {Color = Color3.fromRGB(100,100,100)}):Play()
            wait(0.05)
            TweenService:Create(Toggle.Switch.Indicator, TweenInfo.new(0.45, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {Size = UDim2.new(0,17,0,17)}):Play()    
            wait(0.15)
            TweenService:Create(Toggle, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {BackgroundColor3 = SelectedTheme.ElementBackground}):Play()
            TweenService:Create(Toggle.UIStroke, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {Transparency = 0}):Play()    
        else
            ToggleSettings.CurrentValue = false
            TweenService:Create(Toggle, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {BackgroundColor3 = SelectedTheme.ElementBackgroundHover}):Play()
            TweenService:Create(Toggle.UIStroke, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {Transparency = 1}):Play()
            TweenService:Create(Toggle.Switch.Indicator, TweenInfo.new(0.45, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {Position = UDim2.new(1, -40, 0.5, 0)}):Play()
            TweenService:Create(Toggle.Switch.Indicator, TweenInfo.new(0.4, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {Size = UDim2.new(0,12,0,12)}):Play()
            TweenService:Create(Toggle.Switch.Indicator.UIStroke, TweenInfo.new(0.55, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {Color = SelectedTheme.ToggleDisabledStroke}):Play()
            TweenService:Create(Toggle.Switch.Indicator, TweenInfo.new(0.8, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {BackgroundColor3 = SelectedTheme.ToggleDisabled}):Play()
            TweenService:Create(Toggle.Switch.UIStroke, TweenInfo.new(0.55, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {Color = Color3.fromRGB(65,65,65)}):Play()
            wait(0.05)
            TweenService:Create(Toggle.Switch.Indicator, TweenInfo.new(0.4, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {Size = UDim2.new(0,17,0,17)}):Play()
            wait(0.15)
            TweenService:Create(Toggle, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {BackgroundColor3 = SelectedTheme.ElementBackground}):Play()
            TweenService:Create(Toggle.UIStroke, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {Transparency = 0}):Play()    
        end
        local Success, Response = pcall(function()
            ToggleSettings.Callback(ToggleSettings.CurrentValue)
        end)
        if not Success then
            TweenService:Create(Toggle, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {BackgroundColor3 = Color3.fromRGB(85, 0, 0)}):Play()
            TweenService:Create(Toggle.UIStroke, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {Transparency = 1}):Play()
            Toggle.Title.Text = "Callback Error"
            print("Rayfield | "..ToggleSettings.Name.." Callback Error " ..tostring(Response))
            wait(0.5)
            Toggle.Title.Text = ToggleSettings.Name
            TweenService:Create(Toggle, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {BackgroundColor3 = SelectedTheme.ElementBackground}):Play()
            TweenService:Create(Toggle.UIStroke, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {Transparency = 0}):Play()
        end
        SaveConfiguration()
    end

    if Settings.ConfigurationSaving then
        if Settings.ConfigurationSaving.Enabled and ToggleSettings.Flag then
            RayfieldLibrary.Flags[ToggleSettings.Flag] = ToggleSettings
        end
    end

    return ToggleSettings
end

function ToggleSettings:Set(NewToggleValue)
    createToggleSettingsUI(ToggleSettings):Set(NewToggleValue)
end

return Tab
end

function RayfieldLibrary:Destroy()
    Rayfield:Destroy()
end

game:GetService("UserInputService").InputBegan:Connect(function(Input)
    if Input.KeyCode == Enum.KeyCode.K and not Debounce then
        if not Hidden then
            Hidden = true
            Hide()
        else
            Hidden = false
            Unhide()
        end
    end
end)

Topbar.Hide.MouseButton1Click:Connect(function()
    if not Hidden then
        Hidden = true
        Hide()
    else
        Hidden = false
        Unhide()
    end
end)

Topbar.ChangeSize.MouseButton1Click:Connect(function()
    if not Minimised and not Hidden then
        Minimised = true
        Minimise()
    elseif Minimised and not Hidden then
        Minimised = false
        Maximise()
    end
end)

Topbar.Theme.MouseButton1Click:Connect(function()
    if SelectedTheme == RayfieldLibrary.Theme.Default then
        ChangeTheme("Light")
    elseif SelectedTheme == RayfieldLibrary.Theme.Light then
        ChangeTheme("Default")
    end
end)

if CEnabled then
    if isfile(ConfigurationFolder.."/"..CFileName..ConfigurationExtension) then
        local Data = readfile(ConfigurationFolder.."/"..CFileName..ConfigurationExtension)
        LoadConfiguration(Data)
    end
end

wait(0.3)

for _, TabButton in ipairs(TabList:GetChildren()) do
    if TabButton.ClassName == "Frame" and TabButton.Name ~= "Placeholder" then
        TabButton.BackgroundTransparency = 0.7
        TabButton.Title.TextTransparency = 0.2
        TabButton.Shadow.ImageTransparency = 0.7
        TabButton.Image.ImageTransparency = 0.2
        TabButton.UIStroke.Transparency = 0
    end
end

Topbar.Visible = true
Elements.Visible = true

TweenService:Create(Main, TweenInfo.new(0.7, Enum.EasingStyle.Quint), {BackgroundTransparency = 0}):Play()
TweenService:Create(Main.Topbar, TweenInfo.new(0.7, Enum.EasingStyle.Quint), {BackgroundTransparency = 0}):Play()
TweenService:Create(Main.Topbar.CornerRepair, TweenInfo.new(0.7, Enum.EasingStyle.Quint), {BackgroundTransparency = 0}):Play()
TweenService:Create(Main.Topbar.Divider, TweenInfo.new(0.7, Enum.EasingStyle.Quint), {BackgroundTransparency = 0}):Play()
TweenService:Create(Main.Topbar.ChangeSize, TweenInfo.new(0.7, Enum.EasingStyle.Quint), {ImageTransparency = 0.8}):Play()
TweenService:Create(Main.Topbar.Hide, TweenInfo.new(0.7, Enum.EasingStyle.Quint), {ImageTransparency = 0.8}):Play()
TweenService:Create(Main.Topbar.Theme, TweenInfo.new(0.7, Enum.EasingStyle.Quint), {ImageTransparency = 0.8}):Play()
TweenService:Create(Main.Shadow.Image, TweenInfo.new(0.7, Enum.EasingStyle.Quint), {ImageTransparency = 0.55}):Play()

TweenService:Create(LoadingFrame.Title, TweenInfo.new(0.7, Enum.EasingStyle.Quint), {TextTransparency = 1}):Play()
TweenService:Create(LoadingFrame.Subtitle, TweenInfo.new(0.7, Enum.EasingStyle.Quint), {TextTransparency = 1}):Play()
TweenService:Create(LoadingFrame.Version, TweenInfo.new(0.7, Enum.EasingStyle.Quint), {TextTransparency = 1}):Play()
TweenService:Create(LoadingFrame.CornerRepair, TweenInfo.new(0.7, Enum.EasingStyle.Quint), {BackgroundTransparency = 1}):Play()
TweenService:Create(LoadingFrame, TweenInfo.new(0.7, Enum.EasingStyle.Quint), {BackgroundTransparency = 1}):Play()
wait(0.65)
LoadingFrame.Visible = false
Topbar.Visible = true
Elements.Visible = true

RayfieldLibrary.Loaded = true
RayfieldLibrary:Notify({
    Title = "Rayfield UI",
    Content = "The UI has successfully loaded, and is ready for use.",
    Duration = 6.5,
    Image = 4483362458
})

return RayfieldLibrary
